package paymenttemplates

import "townwatch/services/payment/paymentmodels"
import "github.com/stripe/stripe-go/v76"

templ  WalletTier(customer *paymentmodels.Customer, subsc *stripe.Subscription, price *stripe.Price, prices  map[paymentmodels.Tier]*stripe.Price) {
	<div>
		<p>{ price.Nickname } </p>
		<p>{ string(price.UnitAmount) }/{ string(price.Recurring.Interval) } </p>
		if string(customer.Tier) == price.Metadata["tier"] {
			if subsc.CancelAtPeriodEnd {
				<p>Auto: False</p>
			} else {
				<p>Auto: True</p>
			}
		} else {
			<p><strike>Auto </strike> </p>
		}
		if  customer.Tier == paymentmodels.Tier(price.Metadata["tier"]) {
			<form action={ templ.SafeURL("/subscription/cancel/" + price.Metadata["tier"]) } method="get">
				<button type="submit">Cancel</button>
			</form>
		} else if customer.Tier > paymentmodels.Tier(price.Metadata["tier"]) {
			<form action={ templ.SafeURL("/subscription/change/" + price.Metadata["tier"]) } method="get">
				<button type="submit">Downgrade</button>
			</form>
		} else {
			<form action={ templ.SafeURL("/subscription/change/" + price.Metadata["tier"]) } method="get">
				<button type="submit">Upgrade</button>
			</form>
		}
	</div>
}

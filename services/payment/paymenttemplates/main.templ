package paymenttemplates

import "townwatch/services/payment/paymentmodels"
import "github.com/stripe/stripe-go/v76"
import "fmt"
import "sort"

templ Tiers(subscTier paymentmodels.Tier, subsc *stripe.Subscription, prices  map[paymentmodels.Tier]*stripe.Price) {
	for _, tierInt := range sortedMapKeys(prices) {
		@Tier(subscTier, subsc, paymentmodels.Tier(tierInt), prices[paymentmodels.Tier(tierInt)])
	}
}

templ  Tier(subscTier paymentmodels.Tier, subsc *stripe.Subscription, currentTier paymentmodels.Tier, currentPrice *stripe.Price) {
	<div>
		<p>{ currentPrice.Nickname } </p>
		<p>{ fmt.Sprintf("%v",currentPrice.UnitAmount) }/{ string(currentPrice.Recurring.Interval) } </p>
		<form>
			if subsc!=nil && subscTier == currentTier {
				<label for="auto">Auto Pay:</label>
				if subsc.CancelAtPeriodEnd {
					<input type="checkbox" id="auto" name="auto"/>
				} else {
					<input type="checkbox" id="auto" name="auto" checked/>
				}
			} else {
				<label for="auto"><strike>Auto Pay:</strike> </label>
				<input type="checkbox" id="auto" name="auto" disabled/>
			}
		</form>
		<form action={ templ.SafeURL(getTierButtonURL(subscTier, currentTier)) } method="post">
			<button type="submit">
				{ getTierButtonText(subscTier, currentTier) }
			</button>
		</form>
	</div>
}

func sortedMapKeys(prices map[paymentmodels.Tier]*stripe.Price) []int {
	var keys []int
	for tier := range prices {
		keys = append(keys, int(tier))
	}
	sort.Ints(keys)

	return keys
}

func getTierButtonText(subscTier, currentTier paymentmodels.Tier) string {
	if subscTier == paymentmodels.Tier0 {
		return "Subscribe"
	}
	if subscTier == currentTier {
		return "Cancel"
	}
	if subscTier > currentTier {
		return "Downgrade"
	}
	if subscTier < currentTier {
		return "Upgrade"
	}

	return "Subscribe (E)"
}

func getTierButtonURL(subscTier, currentTier paymentmodels.Tier) string {
	if subscTier == paymentmodels.Tier0 {
		return fmt.Sprintf("/subscription/create/%v", currentTier)
	}

	if subscTier == currentTier {
		return "/subscription/cancel"
	}
	return fmt.Sprintf("/subscription/change/%v", currentTier)
}
